diff --git a/rxinitfs b/rxinitfs
index 6b4f632..1f0f2e4 100755
--- a/rxinitfs
+++ b/rxinitfs
@@ -3,12 +3,32 @@
 set -e
 
 find_mods() {
-  find "@LIBDIR@/modules/$(uname -r)/" -name "$1.ko.xz" -print0 -exec cp {} "$2/lib/modules-load/"
+  local f=$(find "@LIBDIR@/modules/" -name "$1.ko.xz")
+  [[ -z "$f" ]] && (>&2 echo "Cannot find module $1") && exit 1
+  cp "$f" "$2/lib/modules-load/"
+  [[ -e "$2/lib/modules-load/$1.ko" ]] && return 0
   unxz "$2/lib/modules-load/$1.ko.xz"
 
-  for d in $(modinfo "$2/lib/modules-load/$1.ko.xz" | grep depends | cut -d ':' -f2 | xargs | tr ',' '\n'); do
+  local kernel=$(echo "$f" | cut -d '/' -f4)
+  if echo "@LIBDIR@" | grep "usr/lib" >/dev/null; then
+    kernel=$(echo "$f" | cut -d '/' -f5)
+  fi
+  local f2=$(echo "$f" | sed "s|/lib/modules/$kernel/||g")
+
+  local deps=()
+  for d in $(modinfo "$2/lib/modules-load/$1.ko" | grep depends | cut -d ':' -f2 | xargs | tr ',' '\n'); do
     find_mods "$d" "$2"
+    local f3=$(find "@LIBDIR@/modules/" -name "$d.ko.xz")
+    local kernel2=$(echo "$f3" | cut -d '/' -f4)
+    if echo "@LIBDIR@" | grep "usr/lib" >/dev/null; then
+      kernel2=$(echo "$f3" | cut -d '/' -f5)
+    fi
+    deps+=($(echo "$f" | sed "s|/lib/modules/$kernel2/||g"))
   done
+
+  mkdir -p "$2$(dirname $f)"
+  cp "$f" "$2$f"
+  echo "$f2: ${deps[@]}" >> "$2/lib/modules/$kernel/modules.dep"
 }
 
 build_initramfs() {
@@ -20,7 +40,14 @@ build_initramfs() {
   cp "@SYSCONFDIR@/rxinitfs.conf" etc/rxinitfs.conf
   source etc/rxinitfs.conf
   for m in $MODULES; do
-    find_mods "$m" "$tempd"
+    if echo "$m" | grep "\*" >/dev/null; then
+      local mods=($(find "@LIBDIR@/modules" -name "$m.ko.xz" | awk -F/ "{print \$(NF)}" | cut -d '.' -f1))
+      for m2 in "${mods[@]}"; do
+        find_mods "$m2" "$tempd"
+      done
+    else
+      find_mods "$m" "$tempd"
+    fi
   done
   find . | cpio -H newc -o > "$tempcpio"
   cd ..
diff --git a/rxinitfs.conf b/rxinitfs.conf
index bc5b538..bd69819 100644
--- a/rxinitfs.conf
+++ b/rxinitfs.conf
@@ -1 +1 @@
-MODULES=""
+MODULES="sd_mod ahci sata_* pata_* ext4 crc32c_*"
diff --git a/template/etc/group b/template/etc/group
index 18acc30..c5bb679 100644
--- a/template/etc/group
+++ b/template/etc/group
@@ -1 +1,6 @@
 root:x:0:root
+tty:x:5:
+uucp:x:987:
+lp:x:991:
+disk:x:994:
+kmem:x:997:
diff --git a/template/init b/template/init
index 1998314..9bba8ba 100755
--- a/template/init
+++ b/template/init
@@ -11,12 +11,17 @@ get_opt() {
 }
 
 loadmod() {
+  if lsmod | grep "$1" >/dev/null; then
+    return 0
+  fi
   for d in $(find /lib/modules-load/ -name "$1.ko" -print0 | xargs -0 modinfo | grep depends | cut -d ':' -f2 | xargs | tr ',' '\n'); do
     if ! lsmod | grep $d >/dev/null; then
       loadmod "$d"
     fi
   done
-  find /lib/modules-load/ -name "$1.ko" -print0 | xargs -0 insmod
+  if ! find /lib/modules-load/ -name "$1.ko" -print0 | xargs -0 insmod >/dev/null 2>&1; then
+    echo "Failed to load module $1"
+  fi
 }
 
 mount -t proc proc /proc
@@ -30,19 +35,28 @@ mknod /dev/tty c 5 0
 source /etc/rxinitfs.conf
 echo "Loading modules"
 for m in $MODULES; do
-  loadmod $m
+  if echo "$m" | grep "\*" >/dev/null; then
+    for m2 in $(find "/lib/modules" -name "$m.ko.xz" | awk -F/ "{print \$(NF)}" | cut -d '.' -f1); do
+      loadmod "$m2"
+    done
+  else
+    loadmod "$m"
+  fi
 done
 
 mdev -s
 
-init="/sbin/init"
+init="/bin/init"
 root="/dev/sda1"
 bootmode="normal"
 
 for i in $(cat /proc/cmdline); do
 	case $i in
+    root=UUID\=*)
+      root=$(blkid | grep "UUID=\"$(echo $i | cut -d '=' -f3)\"" | cut -d ':' -f1)
+      ;;
 		root\=*)
-			root=$(get_opt $i)
+			[[ "$(get_opt $i)" != "UUID" ]] && root=$(get_opt $i)
 			;;
 		init\=*)
 			init=$(get_opt $i)
@@ -59,15 +73,19 @@ case "$bootmode" in
       echo "Failed to find boot device, listing all block devices with partitions:"
       pcount=$(($(wc -l /proc/partitions | cut -d ' ' -f1) - 2))
       if [[ "$pcount" -gt 0 ]]; then
-        cat /proc/partitions | tail -N +$pcount | awk '{print $NF}' | grep -i "[0-9][0-9]*"
+        cat /proc/partitions | tail -n +$pcount | awk '{print $NF}' | grep -i "[0-9][0-9]*"
       else
         echo "No partitions found"
       fi
       echo "Dropping into shell"
       exec sh
     fi
-    mount "${root}" /newroot
-    if [[ -x "/newroot/${init}" ]] ; then
+    if ! mount "${root}" /newroot; then
+      echo "Failed to mount ${root}"
+      echo "Dropping into shell"
+      exec sh
+    fi
+    if [[ ! -x "/newroot/${init}" ]] ; then
 	    umount /sys /proc
 	    exec switch_root /newroot "${init}"
     fi
diff --git a/template/lib/mdev/usbdisk_link b/template/lib/mdev/usbdisk_link
new file mode 100755
index 0000000..1a24852
--- /dev/null
+++ b/template/lib/mdev/usbdisk_link
@@ -0,0 +1 @@
+#!/bin/sh
